<?php
namespace App\Controller;
use App\Models\AppException;
use App\Models\DB;
use App\Models\MCFacebook;
use App\Models\User;
use MartynBiz\Slim3Controller\Controller;
use PDO;
use Psr\Http\Message\RequestInterface;
use Psr\Http\Message\ResponseInterface;

/**
 * Created by PhpStorm.
 * User: Tomer
 * Date: 27/03/17
 * Time: 15:50
 */
class HomeController extends Controller
{

    public function dispatch() {
        $fbId = User::refreshSessionsAndGetIndexIfPossible();

        $settings = ($fbId === null) ? [] : User::getData($fbId);

        return $this->render('index.phtml',[
            'userData' => $settings,
            'initValues' => [
                'people_count' => User::getPeopleCount()
            ]
        ]);

    }

    public function getJustWokeUp() {
//        $preData = $this->request->getParsedBody()['params'];
//        $userID = $preData['user']['fbid'];
//        if (User::exists($userID)) {
//            User::saveFireAlarm($userID, $preData['settings'], $preData['todo'], $preData['alarms'], $preData['tune']);
//        }

        $data = User::getJustWokeUpUsers();
        return $this->response->withJson($data);
    }

    public function getRandomQuote() {
        $pdo = DB::instance();
        $query = "SELECT * FROM quotes q WHERE q.length <= 110 order by rand() limit 1;";
        $sth = $pdo->prepare($query);
        $sth->execute();
        $quote = $sth->fetch(PDO::FETCH_ASSOC);
        unset($quote['id']);
        unset($quote['length']);
        return $this->response->withJson($quote);
    }

    public function getQuotes() {
        $i = 1;
        while (--$i !== 0) {
            $quotes = simplexml_load_file('http://api.forismatic.com/api/1.0/?method=getQuote&lang=en');
            $text = (string)$quotes->quote->quoteText;
            $author = (string)$quotes->quote->quoteAuthor;

            if (trim($text) === '')
                continue;
            if (trim($author) === '')
                $author = 'Unknown';

            try {
                $pdo = DB::instance();
                $query = "INSERT INTO quotes(text, author, length) VALUES(:text, :author, :length);";
                $queryObj = $pdo->prepare($query);
                $queryObj->execute([
                    ':text' =>  $text,
                    ':author' => $author,
                    ':length' => strlen($text),
                ]);
            } catch(\Exception $e) {
                $dbg = 'not unique?';
            }

        }

    }
}